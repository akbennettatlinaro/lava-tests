metadata:
    name: ansiblepatchmetrics
    format: "Lava-Test-Shell Test Definition 1.0"
    description: "Install linaro patchmetrics using Ansible"
params:
    blankvar: empty
run:
    steps:
        - echo '### Step 1 - We need a unique hostname, incase 2 installs collide'
        - hn='lava'`date | md5sum |cut -d' ' -f1`
        - echo 'Hostname = '${hn}
        - echo ${hn} > /etc/hostname
        - hostname ${hn}
        - echo '127.0.0.1 '${hn} >> /etc/hosts
        
        - echo '### Step 2 - Ansible requires Python-pip and python-dev'
        - apt-get update
        - apt-get install -y git-core
        - apt-get install -y python-pip python-dev
        
        - echo '### Step 3 - Install Ansible'
        - pip install ansible
        - version=`ansible --version`
        - lava-test-case ansible-version --result pass --measurement $version --units version
        
        - echo '### Step 4 - This playbook uses a host_vars file for some variables'
        - echo '             The file is in yaml, so we create it in a shell script'
        - . ./ansible/host_vars.sh ${hn}
        
        - echo '### Step 5 - Configure our secrets for the demo, we will use a self-signed cert'
        - . ./ansible/secrets.sh ${hn}
        
        - echo '### Step 6 - Download Playbook into a persistent location'
        - mkdir -p /opt/ansible; cd /opt/ansible
        - git clone https://git.linaro.org/infrastructure/linaro-patchmetrics.git
        
        - echo '### Step 7 - copy over the variable files we created in Step 4 and Step 5'
        - cd linaro-patchmetrics/ansible
        - echo ${hn} >> hosts
        - cp /root/secrets.yml .
        - cp /root/host_vars.tmp host_vars/${hn}
        
        - echo '### Step 8 - Run ansible-playbook locally'
        - ansible-playbook -c local -s -i hosts site.yml -l ${hn}
        
        - echo '### Step 8a - BUG TODO - For some reason the ansible task is not persistent'
        - echo '              For now we run it again outside of ansible and it works'
        - pip install -e git://git.linaro.org/lava/django-crowd-rest-backend.git@c741f1738786c58253b400ffc27a16967702f84c#egg=django_crowd_rest_backend-dev
    
        - echo '### Step 9 - Use the LAVA api to verify the installation and report pass'
        - service apache2 restart
        - curl -o test https://${hn}/ --insecure
        - lava-test-case patchmetrics-server-verification --shell grep Statistics test
